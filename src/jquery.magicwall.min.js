(function(e, t, n, r) {
  "use strict";
  function d(e) {
    this.elem = e;
    this._init();
  }
  function v(t) {
    this.elem = e(t);
  }
  function m(e) {
    var t = this;
    t.base = e;
  }
  function g(e) {
    var t = this;
    t.base = e;
  }
  var i = n,
    s = t,
    o = e(i),
    u = e(s),
    a = "magicWall",
    f = "magicwall",
    l = {
      loading: "." + f + "-loading",
      hover: "." + f + "-hover",
      wrap: "." + f + "-wrap",
      thumb: "." + f + "-thumb",
      grid: "." + f + "-grid",
      gridItem: "." + f + "-grid-item"
    };
  var c = {
      swing: function(e, t, n, r, i) {
        return -r * (t /= i) * (t - 2) + n;
      }
    },
    h = (function() {
      var e = t.getComputedStyle(n.documentElement, ""),
        r = (Array.prototype.slice
          .call(e)
          .join("")
          .match(/-(moz|webkit|ms)-/) ||
          (e.OLink === "" && ["", "o"]))[1],
        i = "WebKit|Moz|MS|O".match(new RegExp("(" + r + ")", "i"))[1];
      return {
        dom: i,
        lowercase: r,
        css: "-" + r + "-",
        js: r[0].toUpperCase() + r.substr(1)
      };
    })(),
    p = (function() {
      var i, s;
      i = n.createElement("p");
      i.style["transform"] =
        "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)";
      n.body.insertBefore(i, n.body.lastChild);
      s = t.getComputedStyle(i).getPropertyValue("transform");
      e(i).remove();
      if (s !== r) {
        return s !== "none";
      } else {
        return false;
      }
    })();
  d.prototype = {
    _init: function() {
      var e = this;
      e._addCssProps();
    },
    _raf: (function() {
      return (
        t.requestAnimationFrame ||
        t.webkitRequestAnimationFrame ||
        t.mozRequestAnimationFrame ||
        t.msRequestAnimationFrame ||
        t.oRequestAnimationFrame ||
        function(e) {
          return t.setTimeout(e, 1e3 / 60);
        }
      );
    })(),
    _caf: (function() {
      return (
        t.cancelAnimationFrame ||
        t.webkitCancelAnimationFrame ||
        t.mozCancelAnimationFrame ||
        t.msCancelAnimationFrame ||
        t.oCancelAnimationFrame ||
        function(e) {
          t.clearTimeout(e);
        }
      );
    })(),
    _easing: {
      swing: function(e, t, n, r, i) {
        return -r * (t /= i) * (t - 2) + n;
      }
    },
    _prefix: (function() {
      var e = t.getComputedStyle(n.documentElement, ""),
        r = (Array.prototype.slice
          .call(e)
          .join("")
          .match(/-(moz|webkit|ms)-/) ||
          (e.OLink === "" && ["", "o"]))[1],
        i = "WebKit|Moz|MS|O".match(new RegExp("(" + r + ")", "i"))[1];
      return {
        dom: i,
        lowercase: r,
        css: "-" + r + "-",
        js: r[0].toUpperCase() + r.substr(1)
      };
    })(),
    _has3d: (function() {
      var i, s;
      i = n.createElement("p");
      i.style["transform"] =
        "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)";
      n.body.insertBefore(i, n.body.lastChild);
      s = t.getComputedStyle(i).getPropertyValue("transform");
      e(i).remove();
      if (s !== r) {
        return s !== "none";
      } else {
        return false;
      }
    })(),
    _addCssProps: function() {
      var e = this,
        t = [
          { publicName: "x", privateName: "_x", defaultValue: 0 },
          { publicName: "y", privateName: "_y", defaultValue: 0 },
          { publicName: "z", privateName: "_z", defaultValue: 0 },
          { publicName: "rotX", privateName: "_rx", defaultValue: 0 },
          { publicName: "rotY", privateName: "_ry", defaultValue: 0 },
          { publicName: "rotZ", privateName: "_rz", defaultValue: 0 },
          { publicName: "originX", privateName: "_ox", defaultValue: 0.5 },
          { publicName: "originY", privateName: "_oy", defaultValue: 0.5 },
          { publicName: "scaleX", privateName: "_scx", defaultValue: 1 },
          { publicName: "scaleY", privateName: "_scy", defaultValue: 1 },
          { publicName: "opacity", privateName: "_op", defaultValue: 1 }
        ],
        n = 0,
        i = t.length;
      for (; n < i; n++) {
        e[t[n].publicName] = (function(t) {
          return function(n) {
            if (n === r)
              return e[t.privateName] !== r ? e[t.privateName] : t.defaultValue;
            e[t.privateName] = n;
            return e;
          };
        })(t[n]);
      }
    },
    _animate: function(e) {
      function n() {
        i = r._getValue(e.from, e.to, s, o, e.easing);
        if (e.callback) e.callback(i, s, o, e.callbackParams);
        if (e.onUpdate) e.onUpdate(i, s, o, e.onUpdateParams);
        if (s == o) {
          if (e.complete) e.complete();
          if (e.onComplete) e.onComplete();
        } else {
          e.context[e.id] = r._raf.call(t, function() {
            n();
          });
        }
        s = Math.min(o, s + 1e3 / 60);
      }
      var r = this,
        i = e.from,
        s = -e.delay || 0,
        o = !e.duration ? 1e3 : e.duration;
      if (e.context[e.id]) r._caf.call(t, e.context[e.id]);
      if (e.callback) e.callback(i, s, o, e.callbackParams);
      if (e.onUpdate) e.onUpdate(i, s, o, e.onUpdateParams);
      n();
    },
    _getValue: function(t, n, r, i, s) {
      var o = this,
        u;
      u = e.easing && e.easing[s] ? e.easing[s] : o._easing.swing;
      return u(null, Math.max(0, r), t, n - t, i);
    },
    _doFromTo: function(t, n, r, i) {
      var s = this,
        o = t || n,
        u = s.elem instanceof jQuery,
        a;
      r = e.extend(true, {}, r);
      for (a in o) {
        r = e.extend(true, {}, r);
        r.id = a + "Tween";
        r.context = s;
        r.from = [(t || {})[a], u ? s[a]() : s.elem[a]][i == "to" ? 1 : 0];
        r.to = [(n || {})[a], u ? s[a]() : s.elem[a]][i == "from" ? 1 : 0];
        r.callback = (function(e) {
          return function(t) {
            if (u) {
              s[e](t);
              s.update();
            } else {
              s.elem[e] = t;
            }
          };
        })(a);
        s[a + "TweenProps"] = r;
        s._animate(r);
      }
      return s;
    },
    set: function(e, t) {
      var n = this,
        r = 0,
        i;
      e = e.split(",");
      i = e.length;
      for (; r < i; r++) n[e[r]](t);
      return n;
    },
    to: function(e, t) {
      var n = this;
      n._doFromTo(null, e, t, "to");
      return n;
    },
    from: function(e, t) {
      var n = this;
      n._doFromTo(e, null, t, "from");
      return n;
    },
    fromTo: function(e, t, n) {
      var r = this;
      r._doFromTo(e, t, n, "fromTo");
      return r;
    },
    stop: function(e, n) {
      var r = this;
      e = e.split(",");
      for (var i in e) {
        if (n && r[e[i] + "TweenProps"]) {
          r[e[i]](r[e[i] + "TweenProps"].to);
        }
        r._caf.call(t, r[e[i] + "Tween"]);
      }
      return r;
    },
    end: function(e) {
      var t = this;
      t.stop(e, true);
      return t;
    },
    update: function() {
      var e = this,
        t = [],
        n;
      t.push("translate3d(" + e.x() + "px, " + e.y() + "px, " + e.z() + "px)");
      t.push("rotateX(" + e.rotX() + "deg)");
      t.push("rotateY(" + e.rotY() + "deg)");
      t.push("rotateZ(" + e.rotZ() + "deg)");
      t.push("scaleX(" + e.scaleX() + ")");
      t.push("scaleY(" + e.scaleY() + ")");
      n = {};
      n[e._prefix.css + "transform"] = t.join(" ");
      n[e._prefix.css + "transform-origin"] =
        e.originX() * 100 + "% " + e.originY() * 100 + "%";
      n["opacity"] = e.opacity();
      e.elem.css(n);
      return e;
    }
  };
  e.fn[a] = function(t) {
    var n = Array.prototype.slice.call(arguments, 1);
    return e(this).each(function() {
      var r = e(this).data("_" + a + "Instance");
      if (typeof t === "string" && !r) return;
      r = r || new v(this);
      r.init(t, n);
      e(this).data("_" + a + "Instance", r);
    });
  };
  e.fn[a].options = {
    service: false,
    jsonUrl: false,
    appKey: false,
    userID: false,
    photoSetID: false,
    photoCount: 50,
    photoSize: 2,
    maxItemWidth: 240,
    maxItemHeight: 160,
    columnsCount: false,
    rowsCount: false,
    minColumnsCount: 1,
    minRowsCount: 1,
    maxColumnsCount: false,
    maxRowsCount: false,
    thumbSizing: "cover",
    perspective: 600,
    delay: 1e3,
    loadingMode: "normal",
    paused: false,
    useCache: true,
    preloadBeforeSwitch: false,
    animations: "*",
    excludedAnimations: "",
    pauseOnHover: false,
    fixedClass: "fixed",
    breakpoints: false,
    autoUpdateOnResize: 50,
    duration: 600,
    easing: "easeInOutCubic",
    rollInXDuration: false,
    rollInXEasing: false,
    rollInYDuration: false,
    rollInYEasing: false,
    rollOutXDuration: false,
    rollOutXEasing: false,
    rollOutYDuration: false,
    rollOutYEasing: false,
    flipXDuration: false,
    flipXEasing: false,
    flipYDuration: false,
    flipYEasing: false,
    slideXDuration: false,
    slideXEasing: false,
    slideYDuration: false,
    slideYEasing: false,
    slideRowDuration: false,
    slideRowEasing: false,
    slideColumnDuration: false,
    slideColumnEasing: false,
    fadeDuration: false,
    fadeEasing: false
  };
  e.fn[a].services = {
    _json: {
      getURL: function(e) {
        return e.jsonUrl || "";
      },
      processJSON: function(e, t) {
        var n = e.photos,
          r = 0,
          i = [];
        if (n) {
          for (; r < n.length; r++) {
            i.push(n[r].image_url);
          }
          return i;
        }
        return false;
      }
    },
    _flickr: {
      getURL: function(e) {
        var t = "https://api.flickr.com/services/rest/?method=";
        if (e.userID) {
          t += "flickr.people.getPublicPhotos&user_id=" + e.userID;
        } else if (e.photoSetID) {
          t +=
            "flickr.photosets.getPhotos&media=photos&photoset_id=" +
            e.photoSetID;
        }
        t +=
          "&format=json&nojsoncallback=1&per_page=" +
          e.photoCount +
          "&api_key=" +
          e.appKey;
        return t;
      },
      processJSON: function(e, t) {
        var n = e.photos || e.photoset,
          r = 0,
          i = [],
          s = ["q", "m", "n", "z"];
        if (n) {
          n = n.photo;
          for (; r < n.length; r++) {
            i.push(
              "http://farm" +
                n[r].farm +
                ".static.flickr.com/" +
                n[r].server +
                "/" +
                n[r].id +
                "_" +
                n[r].secret +
                "_" +
                s[t.photoSize - 1] +
                ".jpg"
            );
          }
          return i;
        }
        return false;
      }
    },
    _500px: {
      getURL: function(e) {
        return (
          "https://api.500px.com/v1/photos?feature=user&username=" +
          e.userID +
          "&rpp=" +
          e.photoCount +
          "&image_size=" +
          e.photoSize +
          "&consumer_key=" +
          e.appKey
        );
      },
      processJSON: function(e, t) {
        var n = e.photos,
          r = 0,
          i = [];
        if (n) {
          for (; r < n.length; r++) {
            i.push(n[r].image_url);
          }
          return i;
        }
        return false;
      }
    },
    _instagram: {
      getURL: function(e) {
        return (
          "https://api.instagram.com/v1/users/" +
          e.userID +
          "/media/recent?count=" +
          e.photoCount +
          "&client_id=" +
          e.appKey +
          "&callback=?"
        );
      },
      processJSON: function(e, t) {
        var n = e.data,
          r = 0,
          i = [],
          s = [
            "thumbnail",
            "thumbnail",
            "low_resolution",
            "standard_resolution"
          ];
        if (n) {
          for (; r < n.length; r++) {
            i.push(n[r].images[s[t.photoSize - 1]].url);
          }
          return i;
        }
        return false;
      }
    }
  };
  v.prototype = {
    init: function(n, i) {
      var s = this;
      if (s.api(n, i)) return s;
      s.originalHTML = s.elem.clone(true, true);
      s.manager = new m(s);
      s.userOptions = e.extend(true, {}, e.fn[a].options, n);
      for (var o in e.fn[a].options) {
        if (s.elem.data(o.toLowerCase()) !== r) {
          s.userOptions[o] = s.elem.data(o.toLowerCase());
        }
      }
      s.updateOptions();
      s.setupStart();
      t.s = s;
      return s;
    },
    updateOptions: function() {
      var e = this,
        t = e.elem.outerWidth(),
        n,
        r,
        i,
        s;
      n = e.userOptions.breakpoints ? e.userOptions.breakpoints.split(",") : [];
      i = n.length;
      for (r = 0; r < i; r++) {
        if (t <= n[r] && e.userOptions["options_" + n[r]]) {
          s = e.userOptions["options_" + n[r]];
        }
      }
      e.setOptions(s || e.userOptions);
      return e;
    },
    setOptions: function(t) {
      var n = this;
      n.options = e.extend(true, {}, e.fn[a].options, t || n.options);
      return n;
    },
    setupStart: function() {
      var t = this;
      t.updateItemsList();
      t.elem
        .on("mouseover", l.grid + "," + l.gridItem, function() {
          e(this).addClass(l.hover.slice(1));
        })
        .on("mouseout", l.grid + "," + l.gridItem, function() {
          e(this).removeClass(l.hover.slice(1));
          if (t.options.pauseOnHover == "all") t.manager.reset();
        });
      if (t.options.service) {
        t.loadJSON(t.options.service);
      } else {
        t.setupComplete();
      }
      return t;
    },
    updateItemsList: function() {
      var e = this;
      e.itemsList = e.elem.find(l.grid);
      e.items = e.itemsList.children();
      return e;
    },
    loadJSON: function(t) {
      var n = this,
        r = n.options,
        i = "_" + t,
        s = e.fn[a].services[i].getURL(r);
      n.elem.addClass(l.loading.slice(1));
      e.getJSON(s, function(t) {
        n.elem.removeClass(l.loading.slice(1));
        n.buildDOMItems(e.fn[a].services[i].processJSON(t, r));
        n.setupComplete();
      });
      return n;
    },
    buildDOMItems: function(t) {
      var n = this,
        r = 0,
        i;
      i = n.items.eq(0).clone();
      if (!i.length) i = e("<li/>");
      n.itemsList.empty();
      for (; r < t.length; r++) {
        n.itemsList.append(i.clone().attr("data-thumb", t[r]));
      }
      n.updateItemsList();
      return n;
    },
    setupComplete: function() {
      var n = this;
      n.buildItems(n.items);
      n.gridBuild();
      n.loadItems();
      n.manager.init();
      if (
        n.options.autoUpdateOnResize !== false &&
        n.options.autoUpdateOnResize > 0
      ) {
        e(t).resize(function() {
          clearTimeout(n.autoUpdateOnResizeTimer);
          n.autoUpdateOnResizeTimer = setTimeout(function() {
            n.update();
          }, n.options.autoUpdateOnResize);
        });
      }
      return n;
    },
    buildItems: function(t) {
      var n = this;
      t.each(function() {
        var t = new g(n);
        t.init(e(this));
        t.setIndex(e(this).index());
      });
      return n;
    },
    gridBuild: function() {
      var e = this,
        t = 0;
      e.gridCalculations();
      e.items.removeClass(l.gridItem.slice(1));
      for (; t < e.xCount * e.yCount; t++) {
        e.items.filter("[data-index=" + t + "]").addClass(l.gridItem.slice(1));
      }
      e.gridLayout();
      return e;
    },
    gridCalculations: function() {
      var e = this,
        t = e.elem.width(),
        n = e.elem.height(),
        r,
        i,
        s,
        o,
        u,
        a,
        f,
        l;
      if (e.options.columnsCount) {
        e.xCount = e.options.columnsCount;
      } else {
        r = Math.floor(t / e.options.maxItemWidth);
        i = Math.ceil(t / e.options.maxItemWidth);
        e.xCount = t / r > e.options.maxItemWidth ? i : r;
        e.xCount = Math.max(e.options.minColumnsCount || 1, e.xCount);
        if (e.options.maxColumnsCount)
          e.xCount = Math.min(e.options.maxColumnsCount, e.xCount);
      }
      if (e.options.rowsCount) {
        e.yCount = e.options.rowsCount;
      } else {
        s = Math.floor(n / e.options.maxItemHeight);
        o = Math.ceil(n / e.options.maxItemHeight);
        e.yCount = n / s > e.options.maxItemHeight ? o : s;
        e.yCount = Math.max(e.options.minRowsCount || 1, e.yCount);
        if (e.options.maxRowsCount)
          e.yCount = Math.min(e.options.maxRowsCount, e.yCount);
      }
      e.itemWidth = Math.ceil(t / e.xCount);
      e.itemHeight = Math.ceil(n / e.yCount);
      return e;
    },
    gridLayout: function() {
      var t = this,
        n,
        r,
        i,
        s;
      i = t.items.hide().filter(l.gridItem);
      i.each(function() {
        s = t.getItemObject(e(this));
        n = s.index % t.xCount;
        r = Math.floor(s.index / t.xCount);
        s.setPosition(n, r).elem.show();
      });
      return t;
    },
    loadItems: function(t) {
      function a(e) {
        o = e <= i.length - 1;
        if (!o) return;
        u = n.getItemObject(i.eq(e));
        if (u.loaded) {
          if (o) a(e + 1);
        } else {
          u.elem.bind("loaded." + f, function() {
            a(e + 1);
          });
          if (o && !u.loading) u.load();
        }
      }
      var n = this,
        r = t || 0,
        i = n.items.filter(l.gridItem),
        s = i.length,
        o,
        u;
      if (n.options.loadingMode == "normal") {
        i.each(function() {
          n.getItemObject(e(this)).load();
        });
      } else {
        a(r);
      }
      return n;
    },
    excludeAnimations: function(e) {
      var t = this,
        n = [],
        r = 0,
        i;
      if (t.options.excludedAnimations) {
        i = t.options.excludedAnimations.split(",");
      } else {
        return e;
      }
      for (; r < e.length; r++) {
        if (i.indexOf(e[r]) == -1) {
          n.push(e[r]);
        }
      }
      return n;
    },
    parseAnimationOptions: function(t) {
      var n = this,
        r,
        i = [
          "flipX",
          "flipY",
          "rollInX",
          "rollInY",
          "rollOutX",
          "rollOutY",
          "slideX",
          "slideY",
          "slideRow",
          "slideColumn",
          "fade"
        ];
      if (t.animation) {
        r = t.animation;
      } else {
        if (n.options.animations == "*") {
          r = n.excludeAnimations(i);
          r =
            (Math.random() < 0.5 ? "" : "-") +
            r[Math.floor(Math.random() * r.length)];
        } else {
          if (!n.selectedAnimations || !n.selectedAnimations.length)
            n.selectedAnimations = n.options.animations.split(":");
          r = n.excludeAnimations(
            n.selectedAnimations[0] == "*"
              ? i
              : n.selectedAnimations[0].split(",")
          );
          r = r[Math.floor(Math.random() * r.length)];
          n.selectedAnimations.splice(0, 1);
        }
      }
      if (i.indexOf(r.replace("-", "")) == -1) r = "fade";
      return e.extend(true, t, {
        animation: r,
        type: r.replace(/[XY-]/g, ""),
        dir: r.indexOf("-", 0) == 0 ? -1 : 1,
        axis: r.replace(/[^XY]/g, ""),
        duration:
          t.duration ||
          n.options[r.replace("-", "") + "Duration"] ||
          n.options.duration,
        easing:
          t.easing ||
          n.options[r.replace("-", "") + "Easing"] ||
          n.options.easing
      });
    },
    switchItems: function(e, t, n, i, s) {
      var o = this,
        u,
        a,
        c,
        h;
      h = o.parseAnimationOptions({ animation: n, duration: i, easing: s });
      o.updateItemsList();
      o.g = a = o.items.filter(l.gridItem);
      o.h = c = o.items.not(a);
      if (
        o.options.pauseOnHover == "all" &&
        o.itemsList.hasClass(l.hover.slice(1))
      )
        return false;
      if (o.options.pauseOnHover == "item")
        a = o.excludeFromSwitch(a, l.hover, h);
      a = o.excludeFromSwitch(a, "." + o.options.fixedClass, h);
      if (!a.length || !c.length) return o.manager.reset();
      if (e === r)
        e = a.eq(Math.floor(Math.random() * a.length)).attr("data-index");
      if (t === r)
        t = c.eq(Math.floor(Math.random() * c.length)).attr("data-index");
      u = o.getItemObject(o.getItem(t));
      if (o.options.preloadBeforeSwitch && u.loaded !== true) {
        u.elem.bind("loaded." + f, function() {
          u.elem.unbind("loaded." + f);
          o.doSwitchItems(e, t, h);
        });
        u.load();
      } else {
        o.doSwitchItems(e, t, h);
      }
    },
    excludeFromSwitch: function(t, n, r) {
      var i = this,
        s,
        o;
      t.filter(n).each(function() {
        if (r.type == "rollOut") {
          t = t.not(
            i.getItem(
              e(this).attr("data-index") -
                r.dir * (r.axis == "X" ? 1 : i.xCount)
            )
          );
        }
        if (r.type == "slideRow" || r.type == "slideColumn") {
          s = i.getItemObject(e(this));
          for (o = 0; o < (r.type == "slideRow" ? i.xCount : i.yCount); o++) {
            t = t.not(
              i.getItem(
                i.getIndex(
                  r.type == "slideRow" ? o : s.px,
                  r.type == "slideRow" ? s.py : o
                )
              )
            );
          }
        }
        t = t.not(e(this));
      });
      return t;
    },
    doSwitchItems: function(e, t, n) {
      var r = this,
        i,
        s,
        o,
        u,
        a,
        f,
        c;
      i = r.getItem(e);
      s = r.getItem(t);
      u = r.getItemObject(i);
      a = r.getItemObject(s);
      i.css("z-index", 9999);
      s.css("z-index", 9998);
      n.onComplete = function() {
        i.hide();
        u.reset();
        r.update();
      };
      var h =
        (180 *
          Math.atan(
            (0.5 * (n.axis == "Y" ? r.itemHeight : r.itemWidth)) /
              r.options.perspective
          )) /
        Math.PI;
      switch (n.type) {
        case "flip":
          r.swapItems(u, a);
          a.setPosition(u.px, u.py)
            .load()
            .elem.show();
          c = 0;
          n.onUpdate = (function(e) {
            return function(t) {
              if (Math.abs(t) >= 90 && c == 0) {
                c = 1;
                e.elem.hide();
              }
              a.css3d["rot" + n.axis](t - n.dir * 180).update();
            };
          })(u);
          u.css3d.fromTo(
            { X: { rotX: 0 }, Y: { rotY: 0 } }[n.axis],
            { X: { rotX: n.dir * 180 }, Y: { rotY: n.dir * 180 } }[n.axis],
            n
          );
          break;
        case "rollIn":
          i.css("z-index", 9998);
          s.css("z-index", 9999);
          a.setPosition(u.px, u.py)
            .load()
            .elem.show();
          r.swapItems(u, a);
          n.delay = n.duration * 0.25;
          a.css3d["origin" + n.axis](n.dir > 0 ? 0 : 1).fromTo(
            { X: { rotY: n.dir * (90 + h) }, Y: { rotX: -n.dir * (90 + h) } }[
              n.axis
            ],
            { X: { rotY: 0 }, Y: { rotX: 0 } }[n.axis],
            n
          );
          delete n.onUpdate;
          delete n.onComplete;
          a.css3d.fromTo({ opacity: 0 }, { opacity: 1 }, n);
          n.delay = 0;
          u.css3d["origin" + n.axis](n.dir > 0 ? 1 : 0).fromTo(
            { X: { rotY: 0 }, Y: { rotX: 0 } }[n.axis],
            { X: { rotY: -n.dir * (90 + h) }, Y: { rotX: n.dir * (90 + h) } }[
              n.axis
            ],
            n
          );
          u.css3d.fromTo({ opacity: 1 }, { opacity: 0 }, n);
          break;
        case "rollOut":
          a.setPosition(u.px, u.py)
            .load()
            .elem.show();
          if (
            {
              X: (u.px > 0 && n.dir < 0) || (u.px < r.xCount - 1 && n.dir > 0),
              Y: (u.py > 0 && n.dir < 0) || (u.py < r.yCount - 1 && n.dir > 0)
            }[n.axis]
          ) {
            o = r.getItem(
              r.getIndex(
                { X: u.px + n.dir, Y: u.px }[n.axis],
                { X: u.py, Y: u.py + n.dir }[n.axis]
              )
            );
            f = r.getItemObject(o);
          }
          r.swapItems(u, a);
          if (o) r.swapItems(u, f);
          c = 0;
          n.onUpdate = (function(e) {
            return function(t) {
              if (o) {
                if (Math.abs(t) >= 90 - h && c == 0) {
                  c = 1;
                  e.css3d["scale" + n.axis](-1)
                    ["origin" + n.axis](n.dir > 0 ? 0 : 1)
                    [n.axis.toLowerCase()](
                      { X: r.itemWidth * n.dir, Y: r.itemHeight * n.dir }[
                        n.axis
                      ]
                    )
                    .update();
                }
              } else {
                e.css3d
                  .opacity(1 - Math.max(0, (Math.abs(t) - 40) / (120 - 40)))
                  .update();
              }
            };
          })(u);
          u.css3d["origin" + n.axis](n.dir > 0 ? 1 : 0).fromTo(
            { X: { rotY: 0 }, Y: { rotX: 0 } }[n.axis],
            {
              X: { rotY: n.dir * (o ? 180 : 120) },
              Y: { rotX: -n.dir * (o ? 180 : 120) }
            }[n.axis],
            n
          );
          if (o) {
            i = o;
            u = f;
          }
          break;
        case "slide":
          r.swapItems(u, a);
          i.css("overflow", "hidden");
          s.css("overflow", "hidden");
          a.setPosition(u.px, u.py)
            .load()
            .elem.show();
          u.css3d.fromTo(
            { X: { x: 0 }, Y: { y: 0 } }[n.axis],
            {
              X: { x: (n.dir > 0 ? 1 : -1) * r.itemWidth },
              Y: { y: (n.dir > 0 ? 1 : -1) * r.itemHeight }
            }[n.axis],
            n
          );
          a.css3d.fromTo(
            {
              X: { x: (n.dir > 0 ? -1 : 1) * r.itemWidth },
              Y: { y: (n.dir > 0 ? -1 : 1) * r.itemHeight }
            }[n.axis],
            { X: { x: 0 }, Y: { y: 0 } }[n.axis],
            n
          );
          break;
        case "slideRow":
          i = r.getItem(r.getIndex(n.dir > 0 ? r.xCount - 1 : 0, u.py));
          u = r.getItemObject(i);
          i.css("overflow", "hidden");
          s.css("overflow", "hidden");
          r.swapItems(u, a);
          for (c = 0; c < r.xCount - 1; c++) {
            var p = r.getItem(a.index + (n.dir > 0 ? -1 : 1) * (c + 1)),
              d = r.getItemObject(p);
            d.setIndex(d.index + (n.dir > 0 ? 1 : -1));
          }
          a.setIndex(a.index + (n.dir > 0 ? -1 : 1) * (r.xCount - 1));
          a.setPosition(n.dir > 0 ? 0 : r.xCount - 1, u.py)
            .load()
            .elem.show();
          n.onUpdate = function(e) {
            for (c = 0; c < r.xCount - 1; c++) {
              var t = r.getItem(a.index + (n.dir > 0 ? 1 : -1) * (c + 1)),
                i = r.getItemObject(t);
              i.css3d.x(e).update();
            }
            a.css3d.x(e + (n.dir > 0 ? -1 : 1) * r.itemWidth).update();
          };
          u.css3d.to({ x: (n.dir > 0 ? 1 : -1) * r.itemWidth }, n);
          break;
        case "slideColumn":
          i = r.getItem(r.getIndex(u.px, n.dir > 0 ? r.yCount - 1 : 0));
          u = r.getItemObject(i);
          i.css("overflow", "hidden");
          s.css("overflow", "hidden");
          r.swapItems(u, a);
          for (c = 0; c < r.yCount - 1; c++) {
            var p = r.getItem(
                a.index + (n.dir > 0 ? -1 : 1) * (c + 1) * r.xCount
              ),
              d = r.getItemObject(p);
            d.setIndex(d.index + (n.dir > 0 ? 1 : -1) * r.xCount);
          }
          a.setIndex(
            a.index + (n.dir > 0 ? -1 : 1) * r.xCount * (r.yCount - 1)
          );
          a.setPosition(a.index % r.xCount, n.dir > 0 ? 0 : r.yCount - 1)
            .load()
            .elem.show();
          n.onUpdate = function(e) {
            for (c = 0; c < r.yCount - 1; c++) {
              var t = r.getItem(
                  a.index + (n.dir > 0 ? 1 : -1) * (c + 1) * r.xCount
                ),
                i = r.getItemObject(t);
              i.css3d.y(e).update();
            }
            a.css3d.y(e + (n.dir > 0 ? -1 : 1) * r.itemHeight).update();
          };
          u.css3d.to({ y: (n.dir > 0 ? 1 : -1) * r.itemHeight }, n);
          break;
        default:
        case "fade":
          r.swapItems(u, a);
          a.setPosition(u.px, u.py)
            .load()
            .elem.show();
          u.css3d.fromTo({ opacity: 1 }, { opacity: 0 }, n);
          break;
      }
      i.removeClass(l.gridItem.slice(1));
      s.addClass(l.gridItem.slice(1));
      return r;
    },
    swapItems: function(e, t) {
      var n = this,
        r;
      r = e.index;
      e.setIndex(t.index);
      t.setIndex(r);
      return n;
    },
    appendItems: function(t) {
      var n = this,
        r = e(t).appendTo(n.items.parent());
      n.updateItemsList();
      n.buildItems(r);
      n.update();
      return n;
    },
    removeItems: function(t) {
      var n = this;
      e(t).remove();
      n.updateItemsList();
      n.update();
      return n;
    },
    resetItems: function() {
      var t = this;
      t.items.each(function() {
        t.getItemObject(e(this)).reset();
      });
      return t;
    },
    getItem: function(e) {
      return this.items.filter("[data-index='" + e + "']");
    },
    getItemObject: function(e) {
      return e.get(0)["_" + a + "Item"];
    },
    getIndex: function(e, t) {
      return t * this.xCount + e;
    },
    update: function() {
      var e = this;
      e.updateOptions();
      e.resetItems();
      e.manager.reset();
      e.gridBuild();
      e.loadItems();
      return e;
    },
    destroy: function() {
      var e = this;
      e.manager.stop();
      e.elem.replaceWith(e.originalHTML);
      return e;
    },
    api: function(t, n) {
      var i = this;
      if (typeof t === "string") {
        switch (t) {
          case "appendItems":
            i.appendItems(n[0]);
            break;
          case "removeItems":
            i.removeItems(n[0]);
            break;
          case "update":
            i.update();
            break;
          case "destroy":
            i.destroy();
            break;
          case "start":
            i.manager.start();
            break;
          case "stop":
            i.manager.stop();
            break;
          case "switchItem":
            i.switchItems(n[0], r, n[1], n[2], n[3]);
            break;
          case "option":
            var s = {};
            if (typeof n[0] === "string") {
              s[n[0]] = n[1];
            } else {
              s = n[0];
            }
            i.userOptions = e.extend(true, {}, i.userOptions, s);
            i.update();
            break;
        }
        return true;
      }
      return false;
    }
  };
  m.prototype = {
    init: function() {
      var e = this;
      e.paused = e.base.options.paused;
      if (!e.paused) e.start();
      return e;
    },
    reset: function() {
      var e = this,
        t = e.paused;
      e.stop();
      if (!t) e.start();
      return e;
    },
    start: function() {
      var e = this;
      e.stop().tick();
      e.paused = false;
      return e;
    },
    stop: function() {
      var e = this;
      e.paused = true;
      clearTimeout(e.timer);
      return e;
    },
    tick: function() {
      var e = this,
        t = e.base.options;
      e.timer = setTimeout(function() {
        if (!e.paused) e.base.switchItems();
      }, t.delay);
    }
  };
  g.prototype = {
    init: function(t) {
      var n = this;
      n.elem = e(t);
      n.elem.get(0)["_" + a + "Item"] = n;
      n.elem.css(h.css + "perspective", n.base.options.perspective);
      n.elem.on("mouseenter", { t: n }, n.handleMouseOver);
      n.elem.on("mouseleave", { t: n }, n.handleMouseOut);
      n.elem.on("touchend", { t: n }, n.handleTouchEnd);
      n.content = n.elem
        .wrapInner(e("<div/>").addClass(l.wrap.slice(1)))
        .children()
        .eq(0);
      n.css3d = new d(n.content);
      return n;
    },
    handleMouseOver: function(e) {
      var t = e.data.t;
      if (!t.mouseEvents) return;
      t.elem
        .addClass(l.hover)
        .siblings()
        .removeClass(l.hover);
    },
    handleMouseOut: function(e) {
      var t = e.data.t;
      if (!t.mouseEvents) return;
      t.elem.removeClass(l.hover);
    },
    handleTouchEnd: function(e) {
      var t = e.data.t;
      if (!t.mouseEvents) return;
      if (!t.elem.hasClass(l.hover)) {
        e.preventDefault();
        t.handleMouseOver(e);
        return false;
      }
    },
    load: function() {
      var t = this,
        n = t.elem.data("thumb"),
        r = new Image();
      if (t.loading || t.loaded || !n) {
        if (t.loaded) t.elem.trigger("loaded." + f).unbind("loaded." + f);
        return t;
      }
      t.loading = true;
      t.elem.addClass(l.loading.slice(1));
      r.onload = function() {
        t.content.append(
          e("<div/>")
            .addClass(l.thumb.slice(1))
            .css({
              "background-image":
                "url(" +
                (n +
                  (t.base.options.useCache
                    ? ""
                    : "?sid=" + Math.floor(Math.random() * 9e10))) +
                ")",
              "background-position": "center center",
              "background-repeat": "no-repeat",
              "background-size": t.base.options.thumbSizing
            })
            .fadeTo(0, 0)
            .fadeTo(300, 1)
        );
        t.loading = false;
        t.loaded = true;
        t.elem.removeClass(l.loading.slice(1));
        t.elem.trigger("loaded." + f).unbind("loaded." + f);
      };
      r.src = n;
      return t;
    },
    setPosition: function(e, t) {
      var n = this;
      n.px = e;
      n.py = t;
      n.update();
      return n;
    },
    setIndex: function(e) {
      var t = this;
      t.index = e;
      t.elem.attr("data-index", e);
      return t;
    },
    update: function() {
      var e = this;
      e.elem.css({
        width: e.base.itemWidth,
        height: e.base.itemHeight,
        left: e.px * e.base.itemWidth,
        top: e.py * e.base.itemHeight
      });
      return e;
    },
    reset: function() {
      var e = this;
      e.elem.css({ "z-index": 0, overflow: "visible" });
      e.css3d
        .stop("x,y,z,rotX,rotY,rotZ,originX,originY,scaleX,scaleY,opacity")
        .set("x,y,z,rotX,rotY,rotZ", 0)
        .set("originX,originY", 0.5)
        .set("scaleX,scaleY", 1)
        .opacity(1)
        .update();
      return e;
    }
  };
})(jQuery, window, document);
